module Tools

import Books
import Pkg

include("images.jl")

const project_root = dirname(dirname(pathof(Tools)))
const build_dir = joinpath(project_root, "build")
const generated_dir = joinpath(project_root, "_generated")
mkpath(generated_dir)

"""
    output_path(file)

Returns output path in `generated_dir` for `file`.
This appends `.md` because Pandoc can only include Markdown files anyway.
"""
output_path(file) = joinpath(generated_dir, "$file.md")

function git_version_text()
    io = IOBuffer()
    cmd = `git rev-parse HEAD`
    run(pipeline(cmd; stdout=io))
    out = String(take!(io))
    hash = strip(out)
    text = """
    Specifically, it is generated by <https://github.com/rikhuijzer/tools> at commit `$hash`.
    """
end

function julia_and_pkgs_info()
    io = IOBuffer()
    Pkg.status(; io)
    text = String(take!(io))
    lines = split(text, '\n')[3:end-1]
    lines_without_id = [l[14:end] for l in lines]
    pkgs = join(lines_without_id, '\n')

    text = """
    This website is built with Julia $VERSION and
    
    ```
    $pkgs
    ```
    """
end

function versions_info(file)
    text = """
    $(julia_and_pkgs_info())
    
    $(git_version_text())
    """
    path = output_path(file)
    write(path, text)
end

function build_targets(targets)
    for (file, func) in targets
        println("Running function $func for $file")
        func(file)
    end
end

function build()
    println("Building tools")
    rm(build_dir; force=true, recursive=true)
    mkpath(build_dir)

    targets = [
        ("versions", versions_info),
        ("green-ci", green_ci),
    ]
    build_targets(targets)

    Books.build_all()
end

end # module
